<metal:macro define-macro="form">

<input type="hidden" name="mode" id="mode" tal:attributes="value python:test(c.security_policy_id, 'simple', 'complex')">

<label for="title">Name:</label><br/>
<span tal:replace="structure python: h.text_field('title', size=80)" /><br/>

<label for="text">Description:</label><br/>
<span tal:replace="structure python: h.text_area('text', rows=10, cols=80)" /><br/>

<table style="width:100%">
<tr><td><label for="admins">Managers:</label>
<input type="hidden" value="" id="managers" name="managers">
</td><td>

<!-- list managers -->

<span tal:replace="structure python: h.list_with_minuses('list_managers', c.managers, c.administrators)" />

<span class="autocomplete">
  <label for="manager" onclick="$('add_manager').toggle(); $('show_add_manager').toggle()" id="show_add_manager">[ + ] add manager</label>
<span id="add_manager" style="display:none;">
   <input autocomplete="off" id="manager" name="manager" size="20" type="text" value="" />
   <input type="submit" name="submit" value="Add" onclick="addItem('list_managers', $('manager').value);$('manager').value=''; return false;"/>
</span>

  <div class="auto_complete" id="manager_auto_complete"></div>
  <script type="text/javascript">new Ajax.Autocompleter('manager', 'manager_auto_complete', 
  '../../../task/auto_complete_for/manager', {})</script>
</span>

</td><td>

</tr>
</table>


<!-- Permissions -->

This project's team members can:
<ul id="member_permissions"></ul>
Anyone else can:
<ul id="other_permissions"></ul>

<!-- these will be filled in by htmlfill, and then deleted by js -->

<input type="hidden" name="member_level" id="member_level_old" value="0">
<input type="hidden" name="other_level" id="other_level_old" value="0">

<script>
//'
var options = ["not even see this list", "view this list but not participate", "and get tasks assigned to them", "and create new tasks", "and edit any task"];
var lists = ['member', 'other'];
checked = {};
lists.each(function(list_name) {
	list = $(list_name + '_permissions');
	list.className = "undecorated_list";
	options.each (function(option, index) {
		var button = Builder.node('input', {
			id : list_name + '_level_' + index,
			name : list_name + '_level', 
			value : index, 
			type : "radio", 
			onclick : list_name + '_permission_set(' + index + ')'
		    });
		var label = Builder.node('label', {'for' : button.id}, option);
		var li = Builder.node('li', {id : list_name + '_item_' + index}, [button, label]);
		list.appendChild(li);
	    });

	//set the value to the 'previous' value
	old = $(list_name + '_level_old');
	$(list_name + '_level_' + old.value).checked = true;
	list.old_value = old.value;
	old.parentNode.removeChild(old);
    });

lists.each(function(list_name) {
	list = $(list_name + '_permissions');
	eval(list_name + '_permission_set')(list.old_value);
    });

function show_selected(list_name, index) {
    //also show what's selected
    for (var i = 0; i < options.length; ++ i) {
	var radio = $(list_name + '_level_' + i);
	if (i <= index && i > 0) {
	    radio.parentNode.className = 'selected-permission';
	} else {
	    radio.parentNode.className = 'unselected-permission';
	}
    }
}

function disable_radio(radio) {
    radio.disabled = true;
    li = radio.parentNode;
    if (li.className.indexOf('disabled-permission') == -1) {
	li.className += ' disabled-permission';
    }
}

function enable_radio(radio) {
    radio.disabled = false;
    li = radio.parentNode;
    classes = li.className.split(" ");
    new_classes = [];
    for (i in classes) {
	if (classes[i] != 'disabled-permission') {
	    new_classes.push (classes[i]);
	}
    }
    li.className = new_classes.join(' ');
}

function member_permission_set(index) {
    //disable inappropriate options on 'anyone else'; enable appropriate ones
    other_selected = null;
    for (var i = 0; i < options.length; ++ i) {
	var radio = $('other_level_' + i);
	if (radio.checked) {
	    other_selected = radio;
	}
	if (i > index) {
	    disable_radio(radio);
	} else {
	    enable_radio(radio);
	}
    }
    if (other_selected.value > index) {
	$('other_level_' + index).checked = true;
    }

    show_selected('member', index);
}
function other_permission_set(index) {
    //disable inappropriate options on 'member'; enable appropriate ones
    member_selected = null;
    for (var i = 0; i < options.length; ++ i) {
	var radio = $('member_level_' + i);
	if (radio.checked) {
	    member_selected = radio;
	}
	if (i < index) {
	    disable_radio(radio);
	} else {
	    enable_radio(radio);
	}
    }
    if (member_selected.value < index) {
	$('member_level_' + index).checked = true;
    }

    show_selected('other', index);
}


</script>

<!-- Features -->

<br/>
Extra Features <span tal:replace="structure python: h.help('These are optional')"/><br/>
<input type="checkbox" name="feature_deadlines" value="1" class="features"/>Deadlines<br/>
<input type="checkbox" name="feature_custom_statuses" value="1" class="features" onclick="$('add_statuses').toggle();" id="custom_status"/>Custom status<br/>
<input type="hidden" value="" id="statuses" name="statuses">

<div id="add_statuses" tal:condition="not:c/update" style="display:none; margin-left: 3em;">
<span tal:replace="structure python: h.list_with_minuses('list_statuses', [], ['done'])" />

   <input id="status" name="status" size="20" type="text" value="" />
   <input type="submit" name="submit" value="Add" onclick="addItem('list_statuses', $('status').value);$('status').value=''; return false;"/>


</div>
<div id="statuses" tal:condition="c/update" style="margin-left: 3em;">
  Statuses: <span tal:replace="python: ', '.join([s.name for s in c.tasklist.statuses])" />
</div>

<input type="checkbox" name="feature_private_tasks" value="1" class="features"/>Private tasks<br/>

<br/>
By default, tasks are initially assigned to:<br/>
<input type="radio" name="initial_assign" value="0" checked="checked"/> The person who created them<br/>
<input type="radio" name="initial_assign" value="1"/> Unassigned <br/>

<span tal:replace="structure python: h.submit('Submit')" />
<input type="submit" name="Cancel" value="Cancel" onclick="document.location='/tasklist/index';" />

<script language="JavaScript">
   setupEditableList('managers', 'list_managers');
   setupEditableList('statuses', 'list_statuses');
</script>

</metal:macro>
